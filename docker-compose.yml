version: "2.2"

services:
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    user: "0"
    command: >
      bash -c '
        echo "Waiting for Elasticsearch availability";
        until curl --connect-timeout 5 --trace-time -s http://elasticsearch:9200 | grep -q "missing authentication credentials"; do sleep 5; echo "Retrying..."; done;
        echo "Elasticsearch is up";
        echo "Setting kibana_system password";
        until curl --connect-timeout 5 -s -X POST -u "elastic:${ELASTIC_PASSWORD}" -H "Content-Type: application/json" http://elasticsearch:9200/_security/user/kibana_system/_password -d "{\"password\":\"${ELASTIC_PASSWORD}\"}" | grep -q "^{}"; do sleep 5; done;
        echo "All done!";
      '
  elasticsearch:
    depends_on:
      - setup
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: es-semantic-elasticsearch
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    restart: always
    environment:
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=true
      - ES_JAVA_OPTS=-Xms750m -Xmx750m

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: es-semantic-kibana
    volumes:
      - kibanadata:/usr/share/kibana/data
    ports:
      - ${KIBANA_PORT}:5601
    restart: always
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}

  flask:
    container_name: es-semantic-flask
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
      - kibana
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${FLASK_PORT}:5000
    environment:
      - ES_HOST=elasticsearch
    restart: always
    profiles:
      - backend

  flask-cuda:
    container_name: es-semantic-flask
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
      - kibana
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${FLASK_PORT}:5000
    environment:
      - ES_HOST=elasticsearch
    restart: always
    profiles:
      - backend-cuda
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
volumes:
  esdata:
    driver: local
  kibanadata:
    driver: local
